// SYNTAX TEST "lucee.sublime-syntax"
component extends="root.model.text"
          persistent = "true" {

  property test;
// <- embedding.lucee source.lucee.script meta.group.braces.curly - meta.tag.script.lucee
//         ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee string.unquoted.lucee
  property test test;
//         ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee storage.type.lucee
//              ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee string.unquoted.lucee
  property test test test;
//         ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee storage.type.lucee
//              ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee string.unquoted.lucee
//                   ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee entity.other.attribute-name.lucee
  property name="test" required=true;
//         ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee entity.other.attribute-name.lucee
//               ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee string.quoted.double.lucee
//                              ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee string.unquoted.lucee
//                                  ^ embedding.lucee source.lucee.script meta.group.braces.curly punctuation.terminator.statement.lucee
  property
    name = "test"
    required=true;
//  ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee entity.other.attribute-name.lucee
//           ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee string.unquoted.lucee
  property test
//         ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee string.unquoted.lucee
default="string";
// <- embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee entity.other.attribute-name.lucee
//       ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee string.quoted.double.lucee

  static {
//^ embedding.lucee source.lucee.script meta.group.braces.curly meta.static.lucee storage.modifier.lucee
    test = "Test";
    static.test = 2;
//  ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.static.lucee variable.language.scope.lucee
  }

  function foo() {
    var result;

   	toString( testVar, "utf-8" );
//  ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly meta.support.function-call.lucee support.function.lucee
//          ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly meta.support.function-call.lucee meta.support.function-call.arguments.lucee punctuation.definition.arguments.begin.lucee
//                             ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly meta.support.function-call.lucee meta.support.function-call.arguments.lucee punctuation.definition.arguments.end.lucee
    var new_list = testVar.listAppend( "hello" );
//                         ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly meta.support.function-call.member.lucee support.function.member.lucee
//                                   ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly meta.support.function-call.member.lucee meta.support.function-call.member.arguments.lucee punctuation.definition.arguments.begin.lucee
    if ( true ) http url="www.google.com" result="result";
//              ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly meta.tag.script.lucee entity.name.tag.script.lucee
//                   ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.tag.script.lucee entity.other.attribute-name.lucee
    var test = "#foo
//              ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly string.quoted.double.lucee constant.character.hash.lucee
    # true";
    return result = foo;
//         ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly variable.other.lucee
//                  ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly variable.other.lucee
    return result == test ? 'one' : 2;
//         ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly variable.other.lucee
//                   ^ embedding.lucee source.lucee.script meta.group.braces.curly meta.group.braces.curly variable.other.lucee
  }

}