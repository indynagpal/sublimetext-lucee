%YAML1.2
---
# started with https://github.com/SublimeText/ColdFusion
# uses JavaScript package from sublimehq as a reference: https://github.com/sublimehq/Packages/tree/master/JavaScript
# that package was derived from JavaScript Next: https://github.com/Benvie/JavaScriptNext.tmLanguage
name: Lucee Script
scope: source.lucee.script
hidden: true
contexts:
  main:
    - include: core
  prototype:
    - include: comments
  brackets:
    - include: round-brackets
    - include: square-brackets
    - include: curly-brackets
  comments:
    - match: /\*\*(?!/)
      scope: punctuation.definition.comment.lucee
      push:
        - meta_scope: comment.block.documentation.lucee
        - match: \*/
          scope: punctuation.definition.comment.lucee
          pop: true
    - match: /\*
      scope: punctuation.definition.comment.lucee
      push:
        - meta_scope: comment.block.lucee
        - match: \*/
          scope: punctuation.definition.comment.lucee
          pop: true
    - match: (//).*$\n?
      scope: comment.line.double-slash.lucee
      captures:
        1: punctuation.definition.comment.lucee
    - include: scope:embedding.lucee#comments
  component:
    - match: (?i)(^\s*((abstract|final)\s+)?(component)(?=(\s+|{)))
      captures:
        3: storage.modifier.lucee
        4: storage.type.class.lucee
      push:
        - meta_scope: meta.class.lucee
        - match: (?={)
          pop: true
        - include: component-attributes
    - match: (?i)(^\s*(interface)(?=\s+))
      captures:
        1: storage.type.interface.lucee
      push:
        - meta_scope: meta.interface.lucee
        - match: (?={)
          pop: true
        - include: component-attributes
  component-attributes:
    - match: \b(?i:(extends))\b\s*(=)\s*
      captures:
        1: storage.modifier.extends.lucee
      push:
        - match: '(")([a-zA-Z0-9:.]+)?(")'
          captures:
            1: punctuation.definition.string.begin.lucee
            2: entity.other.inherited-class.lucee
            3: punctuation.definition.string.end.lucee
          pop: true
        - match: "(')([a-zA-Z0-9:.]+)?(')"
          captures:
            1: punctuation.definition.string.begin.lucee
            2: entity.other.inherited-class.lucee
            3: punctuation.definition.string.end.lucee
          pop: true
        - match: ([a-zA-Z0-9:.]+)
          captures:
            1: entity.other.inherited-class.lucee
          pop: true
    - include: tag-generic-attribute
  constructor:
    - match: '(new)\s+(?=[_$a-zA-Z][$\w.]*)'
      captures:
        1: keyword.operator.new.lucee
      push:
        - meta_scope: meta.instance.constructor
        - match: '(?![_$a-zA-Z][$\w.]*)'
          pop: true
        - include: support
        - match: '([_$a-zA-Z][$\w.]*\.)?([_$a-zA-Z][$\w]*)'
          captures:
            2: entity.name.class.lucee
  core:
    - include: labels
    - include: labels-functions
    - include: keywords
    - include: static-constructor
    - include: for
    - include: switch
    - include: expression
    - include: punctuation
  curly-brackets:
    - match: "{"
      scope: meta.brace.curly.lucee
      push:
        - meta_scope: meta.group.braces.curly
        - match: "}"
          scope: meta.brace.curly.lucee
          pop: true
        - include: core
  expression:
    - include: support
    - include: function
    - include: function-lambda
    - include: number
    - include: string
    - include: language-constant
    - include: language-variable
    - include: constructor
    - include: component
    - include: method-call
    - include: function-call
    - include: brackets
    - include: operators
    - include: tag-in-script
    - include: storage-modifiers
    - include: variable
  for:
    - match: (?<!\.)\b(for)\b
      captures:
        1: keyword.control.loop.lucee
      push:
        - meta_scope: meta.for.lucee
        - match: \)
          scope: meta.brace.round.lucee
          pop: true
        - match: \(
          scope: meta.brace.round.lucee
          push:
            - match: (?=\))
              pop: true
            - include: keyword-storage
            - include: expression
            - include: punctuation
  function:
    - match: |-
        (?x)
        (?:
          (?: # optional access-control modifier and return-type
            (?i:\b(private|package|public|remote)\s+)? # access-control.modifier
            (?i:\b
              (void)\s+
              |
              (any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid)\s+ # return-type.primitive
              |
              ([A-Za-z0-9_\.$]+)\s+ #return-type component/object (may need additional tokens)
            )?
          )
        )
        (?i:(function)) # storage.function
        \s+
        (?:
          (init) # entity.name.function.contructor
          |
          ([_$a-zA-Z][$\w]*) # entity.name.function
        )\b
      captures:
        1: storage.modifier.lucee
        2: storage.modifier.lucee
        3: storage.type.return-type.void.lucee
        4: storage.type.return-type.primitive.lucee
        5: storage.type.return-type.object.lucee
        6: storage.type.function.lucee
        7: entity.name.function.constructor.lucee
        8: entity.name.function.lucee
      push:
        - meta_scope: meta.function.lucee
        - match: (?<=\))
          set: function-properties
        - include: function-declaration-parameters
    - match: |-
        (?x)
        (\b[_$a-zA-Z][$\w]*)
        \s*=
        \s*(function)(?:(?=\s|[(]))
        \s*([_$a-zA-Z][$\w]*)?\s*
      captures:
        1: entity.name.function.lucee
        2: storage.type.function.lucee
        3: entity.name.function.lucee
      push:
        - meta_scope: meta.function.lucee
        - match: (?<=\))
          pop: true
        - include: function-declaration-parameters
    - match: (?<!\.)\b(function)(?=\s*\()
      captures:
        1: storage.type.function.lucee
      push:
        - meta_scope: meta.function.lucee
        - match: (?<=\))
          pop: true
        - include: function-declaration-parameters
  function-lambda:
    - match: \s*(?=\([^()]*\)\s*(->))
      push:
        - meta_scope: meta.function.lambda.lucee
        - match: (?<=\))\s*(->)
          captures:
            1: storage.type.function.lambda.lucee
          pop: true
        - include: function-declaration-parameters
    - match: \b([_$a-zA-Z][$\w]*)\s*(->)
      scope: meta.function.lambda.lucee
      captures:
        1: storage.type.lucee
        2: variable.parameter.function.lucee
        3: storage.type.function.lambda.lucee
    - match: |-
        (?x)
        (\b[_$a-zA-Z][$\w]*)
        \s*=
        \s*(?=\([^()]*\)\s*(->))
      captures:
        1: entity.name.function.lucee
      push:
        - meta_scope: meta.function.lambda.lucee
        - match: (?<=\))\s*(->)
          captures:
            1: storage.type.function.lambda.lucee
          pop: true
        - include: function-declaration-parameters
    - match: |-
        (?x)
        (\b[_$a-zA-Z][$\w]*)
        \s*=
        \s*\b([_$a-zA-Z][$\w]*)\s*(->)
      scope: meta.function.lambda.lucee
      captures:
        1: entity.name.function.lucee
        2: variable.parameter.function.lucee
        3: storage.type.function.lambda.lucee
  function-call:
    - match: |-
        (?x)
        ([_$a-zA-Z][$\w]*)\s*
        (?=\()
      captures:
        1: variable.function.lucee
      push:
        - meta_scope: meta.function-call.lucee
        - match: (?<=\))
          pop: true
        - match: \(
          scope: punctuation.definition.arguments.begin.lucee
          push:
            - meta_scope: meta.function-call.arguments.lucee
            - match: \)
              scope: punctuation.definition.arguments.end.lucee
              pop: true
            - include: expression
  function-declaration-parameters:
    - match: \(
      scope: punctuation.definition.parameters.begin.lucee
      push:
        - meta_scope: meta.function.parameters.lucee
        - match: \)
          scope: punctuation.definition.parameters.end.lucee
          pop: true
        - match: (?i:required)
          scope: keyword.other.required.argument.lucee
        - include: storage-types
        - match: '[_$a-zA-Z][$\w]*'
          scope: variable.parameter.function.lucee
        - match: ","
          scope: punctuation.definition.separator.parameter.lucee
        - match: "="
          scope: keyword.operator.argument-assignment.lucee
          push:
            - meta_scope: meta.parameter.optional.lucee
            - match: (?=[,)])
              pop: true
            - include: expression
  function-properties:
    - match: (?={)
      pop: true
    - include: tag-generic-attribute
  keyword-storage:
    - match: (?<!\.)\b(var)\b
      scope: storage.type.lucee
  keywords:
    - include: keyword-storage
    - match: (?<!\.)\b(return)\b
      scope: keyword.control.flow.lucee
    - match: (?<!\.)\b(if|else)\b
      scope: keyword.control.conditional.lucee
    - match: (?<!\.)\b(catch|finally|throw|try)\b
      scope: keyword.control.trycatch.lucee
    - match: (?<!\.)\b(break|continue|do|while)\b
      scope: keyword.control.loop.lucee
  labels:
    - match: |-
        (?x)
        (?<!\?)(?<!\?\s)(?=(
          ((')((?:[^']|\\')*)('))|
          ((")((?:[^"]|\\")*)("))
        )\s*:)(?!:)
      push:
        - match: ":"
          scope: punctuation.separator.key-value.lucee
          pop: true
        - include: string
    - match: '(?<!\.|\?|\?\s)(\b[_$a-zA-Z][$\w]*)\s*(:)(?!:)'
      scope: constant.other.object.key.lucee
      captures:
        1: string.unquoted.label.lucee
        2: punctuation.separator.key-value.lucee
  labels-functions:
    - match: |-
        (?x)
        \b([_$a-zA-Z][$\w]*)
        \s*(:)
        \s*(?=\([^()]*\)\s*(->))
      captures:
        1: entity.name.function.lucee
        2: punctuation.separator.key-value.lucee
      push:
        - meta_scope: meta.function.lambda.lucee
        - match: (?<=\))\s*(->)
          captures:
            1: storage.type.function.lambda.lucee
          pop: true
        - include: function-declaration-parameters
    - match: |-
        (?x)
        \b([_$a-zA-Z][$\w]*)
        \s*(:)
        \s*\b([_$a-zA-Z][$\w]*)\s*(->)
      scope: meta.function.lambda.lucee
      captures:
        1: entity.name.function.lucee
        2: punctuation.separator.key-value.lucee
        3: variable.parameter.function.lucee
        4: storage.type.function.lambda.lucee
    - match: |-
        (?x)
        (?:
          ((')((?:[^']|\\')*)('))|
          ((")((?:[^"]|\\")*)("))
        )
        \s*(:)
        \s*(?=\([^()]*\)\s*(->))
      captures:
        1: string.quoted.single.lucee
        2: punctuation.definition.string.begin.lucee
        3: entity.name.function.lucee
        4: punctuation.definition.string.end.lucee
        5: string.quoted.double.lucee
        6: punctuation.definition.string.begin.lucee
        7: entity.name.function.lucee
        8: punctuation.definition.string.end.lucee
        9: punctuation.separator.key-value.lucee
      push:
        - meta_scope: meta.function.lambda.lucee
        - match: (?<=\))\s*(->)
          captures:
            1: storage.type.function.lambda.lucee
          pop: true
        - include: function-declaration-parameters
    - match: |-
        (?x)
        (?:
          ((')((?:[^']|\\')*)('))|
          ((")((?:[^"]|\\")*)("))
        )
        \s*(:)
        \s*\b([_$a-zA-Z][$\w]*)\s*(->)
      scope: meta.function.lambda.lucee
      captures:
        1: string.quoted.single.lucee
        2: punctuation.definition.string.begin.lucee
        3: entity.name.function.lucee
        4: punctuation.definition.string.end.lucee
        5: string.quoted.double.lucee
        6: punctuation.definition.string.begin.lucee
        7: entity.name.function.lucee
        8: punctuation.definition.string.end.lucee
        9: punctuation.separator.key-value.lucee
        10: variable.parameter.function.lucee
        11: storage.type.function.lambda.lucee
  language-constant:
    - match: (?<!\.)\b(?i:true)\b
      scope: constant.language.boolean.true.lucee
    - match: (?<!\.)\b(?i:false)\b
      scope: constant.language.boolean.false.lucee
    - match: (?<!\.)\b(?i:null)\b
      scope: constant.language.null.lucee
  language-variable:
    - match: (?<!\.)\b(?i:super)\b
      scope: variable.language.super.lucee
    - match: (?<!\.)\b(?i:this)\b
      scope: variable.language.this.lucee
    - match: |-
        (?x)
          (?<!\.)\b(?i:(
          application|arguments|attributes|caller|cgi|client|cookie|flash|form|
          local|request|server|session|thistag|thread|thread local|url|variables|
          self|argumentcollection|static
        ))\b
      scope: variable.language.scope.lucee
  method-call:
    - match: |-
        (?x)
        (?<=\.)
        ([_$a-zA-Z][$\w]*)\s*
        (?=\()
      push:
        - meta_scope: meta.function-call.method.lucee
        - match: (?<=\))
          pop: true
        - match: \(
          scope: punctuation.definition.arguments.begin.lucee
          push:
            - meta_scope: meta.function-call.method.arguments.lucee
            - match: \)
              scope: punctuation.definition.arguments.end.lucee
              pop: true
            - match: ","
              scope: punctuation.definition.separator.arguments.lucee
            - match: (?i:(\w+)\s*(?=\=))
              scope: entity.other.method-parameter.lucee
            - include: expression
  number:
    - match: |-
        (?x)(
            (\b[0-9]+)
            |
            (\.[0-9]+[0-9\.]*) # decimals
            |
            (0(x|X)[0-9a-fA-F]+) # hex
            # matches really large double/floats
            |(\.[0-9]+)((e|E)(\+|-)?[0-9]+)?([LlFfUuDd]|UL|ul)?
            )\b
      scope: constant.numeric.lucee
  operators:
    - match: (?<!\.)\b(in|new|void|)\b
      scope: keyword.operator.lucee
    - match: |-
        (?x)
        !(?!=)| # logical-not     right-to-left   right
        &&    | # logical-and     left-to-right   both
        \|\|  | # logical-or      left-to-right   both
      scope: keyword.operator.logical.lucee
    - match: \b(?i:(not|and|or|xor|eqv|imp))\b
      scope: keyword.operator.logical.lucee
    - match: \b(?i:(greater|less|than|equal\s+to|does|contains|equal|eq|neq|lt|lte|le|gt|gte|ge|and|is))\b
      scope: keyword.operator.decision.lucee
    - match: |-
        (?x)
        =(?!=)| # assignment      right-to-left   both
      scope: keyword.operator.assignment.lucee
    - match: |-
        (?x)
        %=   | # assignment      right-to-left   both
        &=   | # assignment      right-to-left   both
        \*=  | # assignment      right-to-left   both
        \+=  | # assignment      right-to-left   both
        -=   | # assignment      right-to-left   both
        /=   | # assignment      right-to-left   both
      scope: keyword.operator.assignment.augmented.lucee
    - match: "&"
      scope: keyword.operator.concat.lucee
    - match: |-
        (?x)
        <=   | # relational      left-to-right   both
        >=   | # relational      left-to-right   both
        <    | # relational      left-to-right   both
        >      # relational      left-to-right   both
      scope: keyword.operator.relational.lucee
    - match: |-
        (?x)
        ==   | # equality        left-to-right   both
        !=     # equality        left-to-right   both
      scope: keyword.operator.comparison.lucee
    - match: |-
        (?x)
        --   | # decrement       n/a             right-or-left
        \+\+ | # increment       n/a             right-or-left
        /    | # division        left-to-right   both
        %    | # modulus         left-to-right   both
        \*   | # multiplication  left-to-right   both
        \+   | # addition        left-to-right   both
        -      # subtraction     left-to-right   both
      scope: keyword.operator.arithmetic.lucee
    - match: (::|\.)
      scope: keyword.operator.accessor.lucee
    - match: '\?|:'
      scope: keyword.operator.ternary.lucee
  punctuation:
    - match: \;
      scope: punctuation.terminator.statement.lucee
    - match: ","
      scope: meta.delimiter.comma.lucee
  round-brackets:
    - match: \(
      captures:
        0: meta.brace.round.lucee
      push:
        - meta_scope: meta.group.braces.round
        - match: \)
          captures:
            0: meta.brace.round.lucee
          pop: true
        - include: expression
    - match: \)
      scope: invalid.illegal.stray.brace.round.lucee
  square-brackets:
    - match: '\['
      captures:
        0: meta.brace.square.lucee
      push:
        - meta_scope: meta.group.braces.square
        - match: '\]'
          captures:
            0: meta.brace.square.lucee
          pop: true
        - include: expression
  static-constructor:
    - match: '\b(static)(?=\s+{)'
      captures:
        1: storage.modifier.lucee
      push:
        - meta_scope: meta.static.lucee
        - match: '\}'
          scope: meta.brace.curly.lucee
          pop: true
        - include: round-brackets
        - match: '\{'
          scope: meta.brace.curly.lucee
          push:
            - match: "(?=})"
              pop: true
            - include: core
  storage-modifiers:
    - match: \b(public|private|static|final|abstract)(?!.)\b
      captures:
        1: storage.modifier.lucee
  storage-types:
    - match: \b(?i:(function|string|date|struct|array|void|binary|numeric|boolean|query|xml|uuid|any))\b
      scope: storage.type.primitive.lucee
  string:
    - match: "'"
      scope: punctuation.definition.string.begin.lucee
      push: string-content-single
    - match: '"'
      scope: punctuation.definition.string.begin.lucee
      push: string-content-double
  string-content-single:
    - meta_include_prototype: false
    - meta_scope: string.quoted.single.lucee
    - match: ('')
      scope: constant.character.escape.quote.lucee
    - match: (')
      captures:
        1: punctuation.definition.string.end.lucee
      pop: true
    - include: scope:embedding.lucee#hash-delimiters
  string-content-double:
    - meta_include_prototype: false
    - meta_scope: string.quoted.double.lucee
    - match: ("")
      scope: constant.character.escape.quote.lucee
    - match: (")
      captures:
        1: punctuation.definition.string.end.lucee
      pop: true
    - include: scope:embedding.lucee#hash-delimiters
  support:
    - match: |-
        (?x)
          (?<!\.)\b
          (?i:
              (abs|acos|addsoaprequestheader|addsoapresponseheader|ajaxonload|applicationstarttime|applicationstop|arrayappend
              |arrayavg|arrayclear|arraycontains|arraycontainsnocase|arraydelete|arraydeleteat|arrayeach|arrayevery|arrayfilter
              |arrayfind|arrayfindall|arrayfindallnocase|arrayfindnocase|arrayfirst|arrayindexexists|arrayinsertat|arrayisempty
              |arraylast|arraylen|arraymap|arraymax|arraymedian|arraymerge|arraymid|arraymin|arrayprepend|arrayreduce|arrayresize
              |arrayreverse|arrayset|arrayslice|arraysome|arraysort|arraysum|arrayswap|arraytolist|arraytostruct|asc|asin|atn
              |binarydecode|binaryencode|bitand|bitmaskclear|bitmaskread|bitmaskset|bitnot|bitor|bitshln|bitshrn|bitxor|bundleinfo
              |cacheclear|cachecount|cachedelete|cacheget|cachegetall|cachegetallids|cachegetdefaultcachename|cachegetmetadata
              |cachegetproperties|cacheidexists|cacheput|cacheremove|callstackdump|callstackget|canonicalize|ceiling|charsetdecode
              |charsetencode|chr|cjustify|collectioneach|collectionevery|collectionfilter|collectionmap|collectionreduce
              |collectionsome|compare|comparenocase|compress|contractpath|cos|createdate|createdatetime|createdynamicproxy
              |createguid|createtime|createtimespan|createuniqueid|createuuid|csrfgeneratetoken|csrfverifytoken|ctcacheclear
              |ctcachelist|currencyformat|datasourceflushmetacache|dateadd|datecompare|datediff|dateformat|datepart|datetimeformat
              |day|dayofweek|dayofweekasstring|dayofweekshortasstring|dayofyear|daysinmonth|daysinyear|decrypt|decryptbinary
              |deleteclientvariable|deserializejson|directorycopy|directorycreate|directorydelete|directoryexists|directorylist
              |directoryrename|dump|duplicate|each|echo|encrypt|encryptbinary|entitydelete|entityload|entityloadbyexample
              |entityloadbypk|entitymerge|entitynamearray|entitynamelist|entitynew|entityreload|entitysave|entitytoquery|esapidecode
              |esapiencode|evaluate|exp|expandpath|extract|fileappend|fileclose|filecopy|filedelete|fileexists|filegetmimetype
              |fileiseof|filemove|fileopen|fileread|filereadbinary|filereadline|fileseek|filesetaccessmode|filesetattribute
              |filesetlastmodified|fileskipbytes|fileupload|fileuploadall|filewrite|filewriteline|find|findnocase|findoneof
              |firstdayofmonth|fix|formatbasen|generatesecretkey|getapplicationsettings|getauthuser|getbasetagdata|getbasetaglist
              |getbasetemplatepath|getbuiltinfunction|getcanonicalpath|getclasspath|getclientvariableslist|getcomponentmetadata
              |getcontextroot|getcpuusage|getcurrentcontext|getcurrenttemplatepath|getdirectoryfrompath|getencoding|getfilefrompath
              |getfileinfo|getfreespace|getfunctioncalledname|getfunctiondata|getfunctionkeywords|getfunctionlist|gethttprequestdata
              |gethttptimestring|getlocale|getlocaledisplayname|getlocaleinfo|getlocalhostip|getluceeid|getmemoryusage|getmetadata
              |getnumericdate|getpagecontext|getprofilesections|getprofilestring|getreadableimageformats|getsoaprequest
              |getsoaprequestheader|getsoapresponse|getsoapresponseheader|getsystemfreememory|getsystemtotalmemory|gettagdata
              |gettaglist|gettempdirectory|gettempfile|gettemplatepath|gettickcount|gettimezone|gettimezoneinfo|gettoken
              |gettotalspace|getvariable|getvfsmetadata|getwriteableimageformats|hash|hmac|hour|htmlcodeformat|htmleditformat
              |htmlparse|imageaddborder|imageblur|imageclearrect|imagecopy|imagecrop|imagedrawarc|imagedrawbeveledrect
              |imagedrawcubiccurve|imagedrawline|imagedrawlines|imagedrawoval|imagedrawpoint|imagedrawquadraticcurve|imagedrawrect
              |imagedrawroundrect|imagedrawtext|imagefilter|imagefiltercolormap|imagefiltercurves|imagefilterkernel|imagefilterwarpgrid
              |imageflip|imagefonts|imageformats|imagegetblob|imagegetbufferedimage|imagegetexifmetadata|imagegetexiftag|imagegetheight
              |imagegetiptctag|imagegetwidth|imagegrayscale|imageinfo|imagenegative|imagenew|imageoverlay|imagepaste|imageread
              |imagereadbase64|imageresize|imagerotate|imagerotatedrawingaxis|imagescaletofit|imagesetantialiasing|imagesetbackgroundcolor
              |imagesetdrawingalpha|imagesetdrawingcolor|imagesetdrawingstroke|imagesetdrawingtransparency|imagesharpen|imageshear
              |imagesheardrawingaxis|imagetranslate|imagetranslatedrawingaxis|imagewrite|imagewritebase64|imagexordrawingmode|inputbasen
              |insert|int|isarray|isbinary|isboolean|isclosure|iscurrency|iscustomfunction|isdate|isdebugmode|isempty|isimage
              |isimagefile|isinstanceof|isipinrange|isipv6|isjson|isleapyear|islocalhost|isnotmap|isnull|isnumeric|isobject|ispdfobject
              |isquery|issimplevalue|issoaprequest|isstruct|isvalid|isvideofile|iswddx|isxml|isxmlattribute|isxmldoc|isxmlelem|isxmlnode
              |isxmlroot|iszipfile|javacast|javanew|jsstringformat|lcase|left|len|listappend|listavg|listchangedelims|listcompact
              |listcontains|listcontainsnocase|listdeleteat|listeach|listevery|listfilter|listfind|listfindnocase|listfirst|listgetat
              |listindexexists|listinsertat|listitemtrim|listlast|listlen|listmap|listprepend|listqualify|listreduce|listremoveduplicates
              |listrest|listsetat|listsome|listsort|listtoarray|listvaluecount|listvaluecountnocase|ljustify|location|log|log10|ltrim
              |manifestread|max|metaphone|mid|millisecond|min|minute|month|monthasstring|monthshortasstring|now|numberformat|objectequals
              |objectload|objectnew|objectsave|ormclearsession|ormcloseallsessions|ormclosesession|ormevictcollection|ormevictentity
              |ormevictqueries|ormexecutequery|ormflush|ormgetsession|ormgetsessionfactory|ormreload|paragraphformat|parsecurrency
              |parsedatetime|parsenumber|pi|precisionevaluate|quarter|query|queryaddcolumn|queryaddrow|querycolumnarray|querycolumncount
              |querycolumndata|querycolumnexists|querycolumnlist|querycurrentrow|querydeletecolumn|querydeleterow|queryeach|queryevery
              |queryexecute|queryfilter|querygetcell|querymap|querynew|queryrecordcount|queryreduce|queryrowdata|querysetcell|queryslice
              |querysome|querysort|randomize|randrange|refind|refindnocase|releasecomobject|rematch|rematchnocase|removechars|render
              |repeatstring|replace|replacelist|replacenocase|rereplace|rereplacenocase|restdeleteapplication|restinitapplication
              |restsetresponse|reverse|right|rjustify|round|rtrim|second|sendgatewaymessage|serialize|serializejson|sessioninvalidate
              |sessionrotate|sessionstarttime|setencoding|setlocale|setprofilestring|settimezone|setvariable|sgn|sin|sleep|soundex
              sqr|sslcertificateinstall|sslcertificatelist|storeaddacl|storegetacl|storesetacl|stringlen|stripcr|structappend|structclear
              |structcopy|structcount|structdelete|structeach|structevery|structfilter|structfind|structfindkey|structfindvalue|structget
              |structinsert|structisempty|structkeyarray|structkeyexists|structkeylist|structkeytranslate|structmap|structnew|structreduce
              |structsome|structsort|structupdate|systemoutput|tan|threadjoin|threadterminate|throw|timeformat|tobase64|tobinary
              |tonumeric|toscript|tostring|trace|transactioncommit|transactionrollback|transactionsetsavepoint|trim|ucase|ucfirst
              |urldecode|urlencode|urlsessionformat|val|webservicenew|week|wrap|writedump|writelog|xmlchildpos|xmlelemnew|xmlformat
              |xmlgetnodetype|xmlnew|xmlparse|xmlsearch|xmltransform|xmlvalidate|year)
            )(?=\()
      captures:
        1: support.function.lucee
      push:
        - meta_scope: meta.support.function-call.lucee
        - match: (?<=\))
          pop: true
        - match: \(
          scope: punctuation.definition.arguments.begin.lucee
          push:
            - meta_scope: meta.support.function-call.arguments.lucee
            - match: \)
              scope: punctuation.definition.arguments.end.lucee
              pop: true
            - include: expression
    - match: |-
        (?x)
            (\.)
            (?i:
              (add|addcolumn|addrow|append|avg|blur|cjustify|clear|clearrect|columnarray|columncount|columndata|columnexists
              |columnlist|compare|comparenocase|contains|containsnocase|copy|count|crop|currentrow|day|dayofweek|dayofyear
              |daysinmonth|daysinyear|delete|deleteat|deletecolumn|deleterow|diff|drawarc|drawcubiccurve|drawline|drawlines
              |drawoval|drawpoint|drawquadraticcurve|drawrect|drawroundrect|each|every|filter|find|findall|findallnocase|findkey
              |findnocase|findoneof|findvalue|first|firstdayofmonth|flip|get|getbufferedimage|getcell|getheight|gettoken|getwidth
              |grayscale|hour|indexexists|info|insert|insertat|isempty|keyarray|keyexists|keylist|keytranslate|last|lcase|left
              |len|listappend|listavg|listchangedelims|listcompact|listcontains|listcontainsnocase|listdeleteat|listeach|listevery
              |listfilter|listfind|listfindnocase|listfirst|listgetat|listindexexists|listinsertat|listitemtrim|listlast|listlen
              |listmap|listprepend|listqualify|listreduce|listremoveduplicates|listrest|listsetat|listsome|listsort|listtoarray
              |listvaluecount|listvaluecountnocase|ljustify|lsdayofweek|ltrim|map|max|median|merge|mid|min|minute|month|overlay
              |part|paste|prepend|quarter|recordcount|reduce|refind|refindnocase|rematch|rematchnocase|removechars|repeatstring
              |replace|replacenocase|rereplace|rereplacenocase|resize|reverse|right|rowdata|rtrim|scaletofit|second|set
              |setantialiasing|setcell|setdrawingstroke|sharpen|slice|some|sort|spanexcluding|spanincluding|stripcr|sum|swap|tolist
              |tostruct|translate|trim|ucase|update|week|wrap|writebase64|year)
            )(?=\()
      captures:
        1: keyword.operator.accessor.lucee
        2: support.function.member.lucee
      push:
        - meta_scope: meta.support.function-call.member.lucee
        - match: (?<=\))
          pop: true
        - match: \(
          scope: punctuation.definition.arguments.begin.lucee
          push:
            - meta_scope: meta.support.function-call.member.arguments.lucee
            - match: \)
              scope: punctuation.definition.arguments.end.lucee
              pop: true
            - include: expression
  switch:
    - match: (?<!\.)\b(switch)\b
      captures:
        1: keyword.control.switch.lucee
      push:
        - meta_scope: meta.switch.lucee
        - match: '\}'
          scope: meta.brace.curly.lucee
          pop: true
        - include: round-brackets
        - match: '\{'
          scope: meta.brace.curly.lucee
          push:
            - match: "(?=})"
              pop: true
            - match: (?<!\.)\b(case|default)\b
              captures:
                1: keyword.control.switch.lucee
              push:
                - match: (?=:)
                  pop: true
                - include: expression
            - include: core
  tag-generic-attribute:
    - match: \b([a-zA-Z0-9:-]+)\b
      captures:
        1: entity.other.attribute-name.lucee
    - match: =
      scope: punctuation.separator.key-value.lucee
      push:
        - match: (?=[;{])
          pop: true
        - match: (?<=[^\s=])
          pop: true
        - include: string
        - match: '(?:[^\s<>/''"{;]|/(?!/>))+'
          scope: string.unquoted.lucee
  tag-in-script:
    - match: (?i)(?<!\.)\b(property)(?!\s+in\b)(\s+(any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid|[_$a-zA-Z][$\w]*))?\s+([_$a-zA-Z][$\w]*\b)(?!\s*=)
      captures:
        1: entity.name.tag.script.lucee
        3: storage.type.lucee
        4: string.unquoted.lucee
      push:
        - meta_scope: meta.tag.script.lucee
        - match: (?=(;|{))
          pop: true
        - include: tag-generic-attribute
    - match: (?i)(?<!\.)\b(property)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*[{;]|\s*$))
      captures:
        1: entity.name.tag.script.lucee
      push:
        - meta_scope: meta.tag.script.lucee
        - match: (?=(;|{))
          pop: true
        - include: tag-generic-attribute
    - match: (?i)(?<!\.)\b(param)(?!\s+in\b)(?=\s+(name|default|max|maxLength|min|pattern|type)\s*=)
      captures:
        1: entity.name.tag.script.lucee
      push:
        - meta_scope: meta.tag.script.lucee
        - match: (?=(;|{))
          pop: true
        - include: scope:embedding.lucee#tag-generic-attribute
    - match: (?i)(?<!\.)\b(param)(?!\s+in\b)\s+([_$a-zA-Z][$\w\.]*)(?=\s+(name|default|max|maxLength|min|pattern|type))
      captures:
        1: entity.name.tag.script.lucee
        2: string.unquoted.lucee
      push:
        - meta_scope: meta.tag.script.lucee
        - match: (?=(;|{))
          pop: true
        - include: scope:embedding.lucee#tag-generic-attribute
    - match: (?i)(?<!\.)\b(param)(?!\s+in\b)(\s+([_$a-zA-Z][$\w]*))?\s+([_$a-zA-Z][$\w\.]*\b)
      captures:
        1: entity.name.tag.script.lucee
        3: storage.type.lucee
        4: string.unquoted.lucee
      push:
        - meta_scope: meta.tag.script.lucee
        - match: (?=(;|{))
          pop: true
        - include: scope:embedding.lucee#tag-generic-attribute
    - match: (?i)(?<!\.)\b(param)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*[{;]|\s*$))
      captures:
        1: entity.name.tag.script.lucee
      push:
        - meta_scope: meta.tag.script.lucee
        - match: (?=(;|{))
          pop: true
        - include: scope:embedding.lucee#tag-generic-attribute
    - match: (?<!\.)(\b)(?i:(abort))(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*;|\s*$))
      captures:
        2: entity.name.tag.script.lucee
      push:
        - meta_scope: meta.tag.script.lucee
        - match: (?=;)
          pop: true
        - include: scope:embedding.lucee#tag-generic-attribute
    - match: |-
        (?x)
            (?<!\.)(\b)
            (?i:
              (ajaximport|ajaxproxy|application|argument|associate|authenticate|break|cache|collection
              |content|cookie|dbinfo|directory|div|document|documentitem|documentsection|dump
              |error|execute|exit|feed|file|flush|form|forward|ftp|function|graph|graphdata|header|htmlbody|htmlhead
              |http|httpparam|image|imap|import|include|index|input|insert|invoke|invokeargument|layout|layoutarea
              |ldap|location|lock|log|loop|mail|mailparam|mailpart|map|mapitem|mediaplayer|module|objectcache|output|pageencoding
              |param|pdf|pdfparam|pop|processingdirective|procparam|procresult|query|queryparam|responseheader|rethrow
              |retry|savecontent|schedule|search|select|setting|silent|sleep|stopwatch|storedproc|thread|throw|timer
              |trace|transaction|update|video|videoplayer|videoplayerparam|wddx|window|x_|xml|zip|zipparam)
            )(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*[{]|\s*$))
      captures:
        2: entity.name.tag.script.lucee
      push:
        - meta_scope: meta.tag.script.lucee
        - match: (?=(;|{))
          pop: true
        - include: scope:embedding.lucee#tag-generic-attribute
  variable:
    - match: '\b[A-Z][_$\dA-Z]*\b'
      scope: variable.other.constant.lucee
    - match: '\b(\$)[$\w]+'
      scope: variable.other.dollar.lucee
      captures:
        1: punctuation.dollar.lucee
    # - match: |-
    #     (?x)
    #     \b([_$a-zA-Z][$\w]*)\s*(::)
    #     ([_$a-zA-Z][$\w]*)\b(?!\()
    #   scope: meta.property.class.lucee
    #   captures:
    #     1: variable.other.class.lucee
    #     2: keyword.operator.accessor.lucee
    #     3: variable.other.property.static.lucee
    - match: '((?<!\.)|(?<!::))[_$a-zA-Z][$\w]*\s*(?=(\[|::))'
      scope: variable.other.object.lucee
      captures:
        1: variable.other.object.lucee
    - match: '(?<=::)\s*([_$a-zA-Z][$\w]*)'
      scope: meta.property.object.static.lucee
      captures:
        1: variable.other.property.lucee
    - match: '((?<!\.)|(?<!::))[_$a-zA-Z][$\w]*\s*(?=[\[\.])'
      scope: variable.other.object.lucee
      captures:
        1: variable.other.object.lucee
    - match: '(?<=\.)\s*([_$a-zA-Z][$\w]*)'
      scope: meta.property.object.lucee
      captures:
        1: variable.other.property.lucee
    - match: '[_$a-zA-Z][$\w]*'
      scope: variable.other.lucee